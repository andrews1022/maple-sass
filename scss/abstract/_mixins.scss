// Clearfix - added to floated elements with no height
@mixin clearfix {
	&::after {
		clear: both;
		content: "";
		display: table;
	}
}

// Absolute position/centering an element
@mixin absolute-center {
	position: absolute;
	left: 50%;
	top: 50%;
	transform: translate(-50%, -50%);
}

// Responsive images reset
@mixin responsive-images {
	display: block;
	height: auto;
	max-width: 100%;
}

// HTML selector border box reset
@mixin html-selector-box-sizing-reset {
	box-sizing: border-box;
}

// Universal selector border box reset
@mixin universal-selector-box-sizing-reset {
	box-sizing: inherit;
	margin: 0;
	padding: 0;
}

// Body selector default font stylings
@mixin default-font-styles {
	font-weight: $font-weight-regular;
	line-height: $line-height-145;
}

// Hide text while making it readable for screen readers
@mixin hide-text {
	overflow: hidden;
	padding: 0;
	text-indent: 101%;
	white-space: nowrap;
}

// Hide an element while making it readable for screen readers
@mixin hide-element {
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px
}

// Simple hide element, quick and dirty
@mixin simple-hide {
	opacity: 0;
	visibility: hidden;
}

// Simple show element, quick and dirty
@mixin simple-show {
	opacity: 1;
	visibility: visible;
}

// Set character limit for paragraphs
@mixin character-limit {
	white-space: wrap;
	overflow: hidden;
	text-overflow: ellipsis;
	max-width: 45ch;

	@include respond(laptop) {
		max-width: 60ch;
	}
}

// Horizontally and vertically center your flexbox container
@mixin flex-center {
	display: flex;
	align-items: center;
	justify-content: center;
}

// Customizable simple flex positioning
@mixin flex-position($justify-content: center, $align-items: center) {
	display: flex;
	justify-content: $justify-content;
	align-items: $align-items;
}

// Simple responsive grid
@mixin responsive-grid {
	display: grid;
	grid-gap: .75rem;
	grid-template-columns: repeat(auto-fit, minmax(30rem, 1fr));
}

// Customizable responsive grid
@mixin custom-responsive-grid($gap: 0.75rem, $minxmax: (30rem, 1fr)) {
	display: grid;
	grid-gap: $gap;
	grid-template-columns: repeat(auto-fit, minmax($minxmax));
}

// Center-aligned background image full height
@mixin responsive-background-image-full-height {
	background-position: top center;
	background-repeat: no-repeat;
	background-size: cover;
	height: 100vh;
}

// Center-aligned background image customizable height
@mixin responsive-background-image-customizable-height($height: 100vh) {
	background-position: top center;
	background-repeat: no-repeat;
	background-size: cover;
	height: $height;
}

// Center-aligned background image customizable height & positions
@mixin responsive-background-image-customizable-both($position: top center, $repeat: no-repeat, $size: cover, $height: 100vh) {
	background-position: $position;
	background-repeat: $repeat;
	background-size: $size;
	height: $height;
}



// Media Query Manager
@mixin respond($breakpoint) {

	@if $breakpoint==mobile-lg {
		@media only screen and (min-width: 34.375em) {
			@content;
		}
	}

	@if $breakpoint==tab-port {
		@media only screen and (min-width: 46.875em) {
			@content;
		}
	}

	@if $breakpoint==tab-land {
		@media only screen and (min-width: 62.5em) {
			@content;
		}
	}

	@if $breakpoint==laptop {
		@media only screen and (min-width: 81.25em) {
			@content;
		}
	}

	@if $breakpoint==laptop-lg {
		@media only screen and (min-width: 100em) {
			@content;
		}
	}

	@if $breakpoint==desktop {
		@media only screen and (min-width: 118.75em) {
			@content;
		}
	}

	@if $breakpoint==desktop-lg {
		@media only screen and (min-width: 156.25em) {
			@content;
		}
	}

	@if $breakpoint==desktop-4k {
		@media only screen and (min-width: 237.5em) {
			@content;
		}
	}
}